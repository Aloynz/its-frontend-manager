generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
  relationMode      = "foreignKeys"
}

model Question {
  id                   String   @id @unique @default(cuid())
  title                String
  description          String?
  entry_function       String?
  io_input             String?
  func_args            String[]
  reference_program_id String   @unique

  @@map("questions")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model User {
  id        String    @id @default(uuid())
  email     String?   @unique
  password  String?
  role      Role?
  school    School?   @relation(fields: [school_id], references: [id])
  school_id String?
  accounts  Account[]

  @@map("users")
}

model School {
  id    String @id
  name  String
  users User[]

  @@map("schools")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String?
  provider          String
  providerAccountId String  @map("provider_account_id")
  token_type        String?
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  scope             String?
  id_token          String? @db.Text
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  session_token     String?

  @@unique([provider, providerAccountId])
  @@map("accounts")
}
